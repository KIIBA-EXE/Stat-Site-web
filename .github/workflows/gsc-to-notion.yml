name: GSC to Notion Weekly

on:
  schedule:
    # Exécutions à 06:00 et 07:00 UTC le lundi; un garde assurera 08:00 Europe/Paris
    - cron: '0 6 * * 1'
    - cron: '0 7 * * 1'
  workflow_dispatch:
    inputs:
      bypass_guard:
        description: 'Run regardless of 08:00 Europe/Paris guard (manual runs only)'
        required: false
        default: 'false'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute 08:00 Europe/Paris guard
        id: guard
        shell: bash
        run: |
          export TZ=Europe/Paris
          echo "Now Paris time: $(date)"
          if [ "$(date +%u)" -eq 1 ] && [ "$(date +%H)" = "08" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Python
        if: steps.guard.outputs.should_run == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.bypass_guard == 'true')
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        if: steps.guard.outputs.should_run == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.bypass_guard == 'true')
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create service account file (supports JSON, *_CONTENT or *_B64)
        if: steps.guard.outputs.should_run == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.bypass_guard == 'true')
        shell: bash
        env:
          SA_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          SA_JSON_CONTENT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_CONTENT }}
          SA_JSON_B64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_B64 }}
        run: |
          set -euo pipefail
          if [ -n "${SA_JSON_B64:-}" ]; then
            echo "Using GOOGLE_SERVICE_ACCOUNT_JSON_B64"
            echo "$SA_JSON_B64" | base64 -d > gcp-service-account.json
          elif [ -n "${SA_JSON:-}" ]; then
            echo "Using GOOGLE_SERVICE_ACCOUNT_JSON"
            printf '%s\n' "$SA_JSON" > gcp-service-account.json
          elif [ -n "${SA_JSON_CONTENT:-}" ]; then
            echo "Using GOOGLE_SERVICE_ACCOUNT_JSON_CONTENT"
            printf '%s\n' "$SA_JSON_CONTENT" > gcp-service-account.json
          else
            echo "Missing service account secret (set one of: GOOGLE_SERVICE_ACCOUNT_JSON_B64, GOOGLE_SERVICE_ACCOUNT_JSON, GOOGLE_SERVICE_ACCOUNT_JSON_CONTENT)" >&2
            exit 1
          fi
          # Validate JSON without heredoc
          python -c "import json,sys; json.load(open('gcp-service-account.json','rb')); print('Service account JSON OK')"

      - name: Run sync weekly-device
        if: steps.guard.outputs.should_run == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.bypass_guard == 'true')
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID_DESKTOP: ${{ secrets.NOTION_DATABASE_ID_DESKTOP }}
          NOTION_DATABASE_ID_MOBILE: ${{ secrets.NOTION_DATABASE_ID_MOBILE }}
          NOTION_DATABASE_ID_TABLET: ${{ secrets.NOTION_DATABASE_ID_TABLET }}
          NOTION_RATE_LIMIT_PER_SEC: '3'
          GOOGLE_SERVICE_ACCOUNT_JSON: gcp-service-account.json
        run: |
          python src/gsc_to_notion.py \
            --site-url "sc-domain:danslesbottes.fr" \
            --mode weekly-device \
            --days-back 30 \
            --lag-days 2

      - name: Skip info
        if: steps.guard.outputs.should_run != 'true' && github.event_name != 'workflow_dispatch'
        run: |
          echo "Skipped: not Monday 08:00 Europe/Paris."
